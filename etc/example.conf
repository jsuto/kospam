; This is an example config with default values
; Attention: do _not_ use whitespace between keys and values

; verbosity level. The more logging the greater load
; 1: normal
; 3: info
; 5: debug
verbosity=1

; unique server id. If you have more than 1 clapf hosts combined,
; then assign a unique value to each host. Possible values: 0-255
server_id=0

; whether to act as an smtp (1) or an lmtp (0) daemon
server_mode=1

; clapf daemon will use this user (and its group)
; if it was started by root
username=clapf

; number of worker processes, ie. the number of simultaneous smtp connections to clapf.
number_of_worker_processes=10

; number of processed emails per each clapf process
max_requests_per_child=1000

; SMTP HELO identification string
hostid=antispam.localhost

; write pid file
pidfile=/var/run/clapf/clapf.pid

; clapf will listen here
listen_addr=127.0.0.1
listen_port=10025

; clapf tries to inject emails to this host:port
smtp_addr=127.0.0.1
smtp_port=10026

; whether always scan message (1) or only if it has an attachment (0)
always_scan_message=1

; whether to return 550 error code and let the virus infected message
; bounced back (0), or send back a 250 ok code and drop the infected letter (1)
silently_discard_infected_email=1

clamd_socket=/var/run/clamav/clamd.ctl

; the 2nd parameter of the listen() system call. Please note that this is set
; when clapf starts up and you should restart clapf if you change this variable.
; Please also note that the meaning of this variable depends on your Unix implementation
backlog=20

workdir=/var/clapf/tmp

;
; antispam stuff
;

; enable the anti-spam decision mechanism (1) or not (0)
; if *not* enabled, clapf will always assign 0.5 as the spamicity value
; if you have not compiled anti-spam support don't care about this
use_antispam=1

; write history data to sql table (0) or to $(localstatedir)/clapf/history (1)
history=0

; Robinson 's' and 'x' parameters
; You may try 0.1 or even 0.0178 for rob_s.
rob_s=1
rob_x=0.52

; effective size factor to help to handle the redundancy caused by
; overlapping tokens. By default both esf_h and esf_s are set to 1
; which means this feature is disabled. You might test what values
; are good for you
esf_h=1
esf_s=1

; The inverse chi square algorithm should use not the 15 most interesting
; as with the Bayesian method, but all the tokens above a certain significance.
; This can be adjusted by the exclusion_radius parameter. If you set it to 0.375,
; then we will include all the tokens with spamicity 0...0.125 or 0.875...1.000.
exclusion_radius=0.375

; a group may be either shared (0) or merged (1). A shared group is useful
; when all the users have similar email patterns. The merged group consists
; of a global database (with uid=0) and all users may train the token database
; with their own data. Clapf will then merge these two datasets at run time.
; You may achieve greater accuracy while personal data requires more disk space.
group_type=0

; the training mode may be either Train On Error (0) or Train Until Mature (1)
; Users may train the token database (only) when an error occurs (=TOE). With
; TUM mode, however, clapf will automatically trains those tokens not mature
; enough (ie. having less then 50 hits in the token table). Though TUM has
; a shorter learning curve, but it produces more tokens in the database, so
; it will be larger than with TOE.
training_mode=0

; skip spam test if the message size is greater than this value (in bytes)
; the default (0) means no such a limit
max_message_size_to_filter=65535

; though some spams have a few words they may be bigger than 'max_message_size_to_filter'
; due to their attachment. So clapf will spam check these emails if they are
; bigger than 'max_message_size_to_filter' AND have less tokens than
; 'max_number_of_tokens_to_filter'.
max_number_of_tokens_to_filter=2000

; mark the message as spam if it includes at least max_number_of_recipients_in_ham+1
; recipients in a single smtp session
max_number_of_recipients_in_ham=9999

; SURBL domain. It's a kind of RBL list. URLs in the incoming messages
; can be checked against the SURBL database. If found a special spammy
; token is created thus the overall spamicity will be higher
; I know another domain - multi.uribl.com - you may use as well as your
; own rbl domain if you have any. You may query multiply RBL lists by
; a comma separated list of domains, like
; surbl_domain=multi.surbl.org,multi.uribl.com,uris.yourdomain.name.here
surbl_domain=

; a comma separated list of IP-addresses of your relay hosts
; A very basic set of patterns are supported, eg. if you want
; clapf to skip 195.56.111.1-255 and 84.15.1.8[0-9]
; in the Received: lines, then set the following:
; skipped_received_ips=195.56.111.,84.15.1.8
;
; The following line would match on 84.15.1.8, but not on
; 84.15.1.80-84.15.1.89!
; skipped_received_ips=84.15.1.8$
;
; please note that "127.,10.,192.168.,172.16." is explicitly
; appended to the list
skipped_received_ips=

; a comma separated list of IP-addresses that clapf "your network"
;
; If the SMTP client host (ie. the host connects to postfix) is on
; "mynetwork", then clapf will not check its spamicity.
;
; Note that clapf checks for viruses even in emails coming from "mynetwork"
;
; The format of this variable is the same as "skipped_received_ips",
;
; if you want to skip spam checking for all emails coming from the
; localhost, eg. your webmail, then set "mynetwork=127.$".
;
; To use this feature, you have to activate XFORWARD in postfix, ie.
; /etc/postfix/main.cf:
;
;lmtp_send_xforward_command = yes
;smtp_send_xforward_command = yes
;smtpd_authorized_xforward_hosts = 127.0.0.0/8
;
mynetwork=

; to enable the trap addresses edit and uncomment the following line
;blackhole_email_list=trapaddress1@domain,trapaddress2@domain

; what to do with a message that came from a zombie host like
; ip-1.2.3.4.adsl.isp.net.
; 0: let the antispam engine handle it (default)
; 1: mark it as spam, and skip the antispam check
; 2: drop it
;
; look at the zombienets.regex file to find out what sender hosts
; clapf considers as part of a zombie network
message_from_a_zombie=0

; custom header field inserted into the message. Note the trailing space!
clapf_header_field=X-Clapf-spamicity: 

; custom header line to insert to spam messages
; Format: <header name>: <value>
clapf_spam_header_field=X-Clapf-spamicity: Yes

; You may define additional header fields to help "less advanced" mailer
; applications, eg. Outlook Express to recognise spam. If your users use
; OE you may use the following fields. For more information, see
; http://wiki.apache.org/spamassassin/OeFilter.
; If you want OE compatibility uncomment the following lines:
;clapf_spam_header_field=X-Priority: 5
;clapf_spam_header_field=Priority: Non-Urgent
;clapf_spam_header_field=Importance: low
;clapf_spam_header_field=X-MSMail-Priority: Low

; put this prefix to the Subject: line if the message is spam
; note the trailing space!
spam_subject_prefix=[sp@m] 

; put this prefix to the Subject: line if the message is not
; evaluated as spam, but it's probability is >possible_spam_limit
; note the trailing space
possible_spam_subject_prefix=[spam???] 

; the message is marked as spam if its spamicity value is above this limit
; actually this can be anywhere above 0.9. If your ham-spam data is good
; your spamicity values are expected around 0.001 and 0.999.
; You may try as low as 0.9
spam_overall_limit=0.92

; a ham message has at most this high spam probability
max_ham_spamicity=0.45

; if the spamicity of the message exceeds this threshold clapf will
; drop the message after accepting it. You may use this feature to
; prevent spam to land in the mailbox of your users. If you enable
; this feature, you should let the spam stored in the spam quarantine,
; see 'store_emails' and 'store_only_spam' below.
;
; By default this feature is disabled as the limit is set to 1.01.
; To enable it set it between ${spam_overall_limit} and 0.9999
spaminess_oblivion_limit=1.01

; see possible_spam_subject_prefix for explanation
possible_spam_limit=0.8



; whether to store emails (1) or not (0) in the queue directory
store_emails=0

; whether to store only spam emails (1) or all emails (0) in the queue directory
; provided that store_emails=1
store_only_spam=1

;
; starttls stuff
;

; whether to enable (1) or disable (0) starttls support
tls_enable=0

; PEM file containing both the certificate and the private key.
; Make sure to create this file (and secure it with chmod 600 /usr/local/etc/clapf.pem)
; before turning on starttls support!
pemfile=

; cipher list to use, see 'man SSL_CTX_set_cipher_list' for more details
cipher_list=HIGH:MEDIUM


; minimum word length in mail body to index
min_word_len=1

; whether to enable CJK (=Chinese, Japanese, and Korean) "characters".
; the text clapf can see with CJK languages may have extremely long
; sequences without any whitespace. To prevent the parser to drop
; these very long sequences, enable (1) this feature. By default it's
; disabled (0).
enable_cjk=0

;
; memcached stuff
;

; memcached server to use. Currently clapf supports only 1 memcached server
memcached_servers=127.0.0.1

; ttl (in secs) of a stored object
; 0 means records don't expire
memcached_ttl=86400

; whether to update counters to memcached (1) or to the database (0)
update_counters_to_memcached=0

; interval to sync memcached data (eg. counters) to database
; this setting is only effective if you have update_counters_to_memcached=1
;
; hint: if you are using a mysql replicated environment and you do _not_ want
; clapf to write to the replicated database (because you do sync it some other
; way to the master database or you are not interested in keeping the counters
; persistantly at all), then specify a big number here, that fits to the 
; "long int" size, eg. 2147483647
memcached_to_db_interval=900


;
; mysql stuff
;

;mysqlhost=127.0.0.1
;mysqlport=3306
mysqlsocket=/var/run/mysqld/mysqld.sock
mysqluser=clapf
mysqlpwd=changeme
mysqldb=clapf
mysql_connect_timeout=2


